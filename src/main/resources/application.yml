spring:
  datasource:
    url: 'jdbc:mysql://localhost:3306/track'
    username: track
    password: track
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: 'true'
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  servlet:
    multipart:
      enabled: 'true'
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  mail:
    host: localhost
    port: '1025'
    username: hello
    password: hello
    properties:
      mail:
        smtp:
          ssl:
            trust: '"*"'
          auth: 'false'
          starttls:
            enable: 'false'
          connectiontimeout: '5000'
          timeout: '3000'
          writetimeout: '5000'
file:
  upload-dir: /src/main/resources/static/uploads

#  ## SQL
#  spring.jpa.hibernate.ddl-auto=update
#  spring.datasource.url=jdbc:mysql://localhost:3306/track
#  spring.datasource.username=root
#  spring.datasource.password=root
#  spring.jpa.show-sql=true
#  spring.jsp.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
#  ## MULTIPART (MultipartProperties)
#  # Enable multipart uploads
#  spring.servlet.multipart.enabled=true
#  # Threshold after which files are written to disk.
#  spring.servlet.multipart.file-size-threshold=2KB
#  # Max file size.
#  spring.servlet.multipart.max-file-size=200MB
#  # Max Request Size
#  spring.servlet.multipart.max-request-size=215MB
#
#  ## File Storage Properties
#  # All files uploaded through the REST API will be stored in this directory
#  file.upload-dir=/src/main/resources/static/uploads
#
#  ## Mail
#  spring.mail.host=localhost
#  spring.mail.port=1025
#  spring.mail.username=hello
#  spring.mail.password=hello
#  spring.mail.properties.mail.smtp.ssl.trust="*"
#  spring.mail.properties.mail.smtp.auth=false
#  spring.mail.properties.mail.smtp.starttls.enable=false
#  spring.mail.properties.mail.smtp.connectiontimeout=5000
#  spring.mail.properties.mail.smtp.timeout=3000
#  spring.mail.properties.mail.smtp.writetimeout=5000